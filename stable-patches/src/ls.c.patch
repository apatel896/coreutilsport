diff --git a/src/ls.c b/src/ls.c
index 3215360..d7dd1c8 100644
--- a/src/ls.c
+++ b/src/ls.c
@@ -113,6 +113,38 @@
 #include "canonicalize.h"
 #include "statx.h"
 
+#ifdef __MVS__
+#define MVS_LS "/bin/ls"
+#define MVS_LS_LEN (sizeof(MVS_ls)-1)
+#include <unistd.h>
+#include <sys/types.h>
+#include <sys/wait.h>
+
+extern char** environ;
+static bool
+do_mvs_ls (int argc, char **argv)
+{
+
+  pid_t pid = fork();
+  if (pid == 0) {
+    argv[0] = MVS_LS;
+    execvpe(MVS_LS, argv, environ);
+  } else if (pid > 0) {
+    int wstatus;
+    pid_t waitchild = waitpid(pid, &wstatus, WUNTRACED | WCONTINUED);
+    if (waitchild == -1) {
+      perror("waitpid");
+      return false;
+    }
+    if (WIFEXITED(wstatus)) {
+      return WEXITSTATUS(wstatus) == 0 ? true : false;
+    } else if (WIFSIGNALED(wstatus)) {
+      fprintf(stderr, "killed by signal %d\n", WTERMSIG(wstatus));
+    }
+  }
+}
+#endif
+
 /* Include <sys/capability.h> last to avoid a clash of <sys/types.h>
    include guards with some premature versions of libcap.
    For more details, see <https://bugzilla.redhat.com/483548>.  */
@@ -1965,7 +1997,7 @@ decode_switches (int argc, char **argv)
     {
       int oi = -1;
       int c = getopt_long (argc, argv,
-                           "abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1",
+                           "abcdEfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1",
                            long_options, &oi);
       if (c == -1)
         break;
@@ -1989,6 +2021,15 @@ decode_switches (int argc, char **argv)
           immediate_dirs = true;
           break;
 
+#ifdef __MVS__
+        case 'E':
+        {
+            int ok = do_mvs_ls(argc, argv);
+            exit (ok ? EXIT_SUCCESS : EXIT_FAILURE);
+        }
+        break;
+#endif
+
         case 'f':
           ignore_mode = IGNORE_MINIMAL; /* enable -a */
           sort_opt = sort_none;         /* enable -U */
@@ -2146,10 +2187,17 @@ decode_switches (int argc, char **argv)
           break;
 
         case 'T':
+#ifdef __MVS__
+        {
+          int ok = do_mvs_ls(argc, argv);
+          exit (ok ? EXIT_SUCCESS : EXIT_FAILURE);
+        }
+          break;
+#else
           tabsize_opt = xnumtoumax (optarg, 0, 0, MIN (PTRDIFF_MAX, SIZE_MAX),
                                     "", _("invalid tab size"), LS_FAILURE, 0);
           break;
-
+#endif
         case 'U':
           sort_opt = sort_none;
           break;
